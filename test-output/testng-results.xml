<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="3" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="26871" started-at="2020-08-29T15:55:12Z" finished-at="2020-08-29T15:55:39Z">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.StepRunner@47542153]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Default test" duration-ms="26871" started-at="2020-08-29T15:55:12Z" finished-at="2020-08-29T15:55:39Z">
      <class name="runner.StepRunner">
        <test-method status="PASS" signature="StartDriver(java.lang.String)[pri:0, instance:runner.StepRunner@47542153]" name="StartDriver" is-config="true" duration-ms="10873" started-at="2020-08-29T15:55:01Z" finished-at="2020-08-29T15:55:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StartDriver -->
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:runner.StepRunner@47542153]" name="setUpClass" is-config="true" duration-ms="1011" started-at="2020-08-29T15:55:12Z" finished-at="2020-08-29T15:55:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.StepRunner@47542153]" name="runScenario" duration-ms="9232" started-at="2020-08-29T15:55:13Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2020-08-29T15:55:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["user can register successfully using javafaker"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[User Registartion]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:runner.StepRunner@47542153]" name="screenshotOnFailure" is-config="true" duration-ms="0" started-at="2020-08-29T15:55:22Z" finished-at="2020-08-29T15:55:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=runScenario status=SUCCESS method=AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.StepRunner@47542153] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.StepRunner@47542153]" name="runScenario" duration-ms="6123" started-at="2020-08-29T15:55:22Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2020-08-29T15:55:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["user can register successfully with filling data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[User Registartion]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:runner.StepRunner@47542153]" name="screenshotOnFailure" is-config="true" duration-ms="0" started-at="2020-08-29T15:55:29Z" finished-at="2020-08-29T15:55:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=runScenario status=SUCCESS method=AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.StepRunner@47542153] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.StepRunner@47542153]" name="runScenario" duration-ms="10140" started-at="2020-08-29T15:55:29Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2020-08-29T15:55:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["user can register successfully with filling data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[User Registartion]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:runner.StepRunner@47542153]" name="screenshotOnFailure" is-config="true" duration-ms="0" started-at="2020-08-29T15:55:39Z" finished-at="2020-08-29T15:55:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=runScenario status=SUCCESS method=AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.StepRunner@47542153] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:runner.StepRunner@47542153]" name="tearDownClass" is-config="true" duration-ms="104" started-at="2020-08-29T15:55:39Z" finished-at="2020-08-29T15:55:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method status="PASS" signature="stopDriver()[pri:0, instance:runner.StepRunner@47542153]" name="stopDriver" is-config="true" duration-ms="903" started-at="2020-08-29T15:55:39Z" finished-at="2020-08-29T15:55:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopDriver -->
      </class> <!-- runner.StepRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
